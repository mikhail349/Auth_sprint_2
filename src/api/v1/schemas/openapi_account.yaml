openapi: 3.0.3
info:
  title: API личного кабинета
  description: |-
    Возможности:
    - Регистрация пользователя
    - Вход в аккаунт (получение access- и refresh-tokens)
    - Обновление access-token
    - Выход из аккаунта (перевод access-token в категорию невалидных)
    - Изменение логина и/или пароля
    - Получение истории входа в аккаунт
  termsOfService: http://swagger.io/terms/
  version: 1.3.2
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: пользователь
    description: Действия с пользователем
components:
  schemas:
    Message:
      required:
        - msg
      type: object
      properties:
        msg:
          type: string
          example: Неверный логин или пароль.
          
    SocialAccountNotFound:
      type: object
      properties:
        msg:
          type: string
          example: Social account not found.
    
    Tokens:
      required:
        - access_token
        - refresh_token
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZXN1bHQiOiJZb3UgYXJlIHZlcnkgc21hcnQhIn0.GZvDoQdT9ldwmlPOrZWrpiaHas0DiFmZlytr1dhaxi4
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZXN1bHQiOiJZb3UgYXJlIGF3ZXNvbWUhIn0.PhRXjIVL1yUhAND4uiE-p6V2rXHQ0drCj9156thJAJg
    User:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: my_login
        password:
          type: string
          example: '12345'
          
    LoginHistory:
      required:
        - id
        - user_agent
        - logged_at
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: Gcc55edda-7acd-4128-877d-02b94430896a
        user_agent:
          type: string
          example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36
        logged_at:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
  
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  responses:
    UnauthorizedError:
      description: Access-token отсутствует/невалидный или срок действия истек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'

paths:
  /user/register:
    post:
      tags:
        - пользователь
      summary: Регистрация
      description: Зарегистрировать нового пользователя по логину и паролю
      requestBody:
        description: Логин и пароль
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Пользователь с таким логином уже заведен в системе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  
  /user/login:
    post:
      tags:
        - пользователь
      summary: Вход в аккаунт
      description: Получить access- и refresh-tokens
      requestBody:
        description: Логин и пароль
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
          
        '401':
          description: Неверный логин/пароль или пользователь не найден в системе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /user/refresh_token:
    post:
      tags:
        - пользователь
      summary: Обновить access-token
      description: Получить новые access- и refresh-tokens на основании refresh-token, переданного в заголовке Authorization
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '401':
          description: Неверный логин/пароль или пользователь не найден в системе
          $ref: '#/components/responses/UnauthorizedError'

  /user/update:
    put:
      tags:
        - пользователь
      summary: Изменить логин и/или пароль
      description: Изменить логин и/или пароль и получить новые access- и refresh-tokens
      security:
        - BearerAuth: []
      requestBody:
        description: Логин и пароль
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /user/login_history:
    get:
      tags:
        - пользователь
      summary: История входов в аккаунт
      description: Получить историю входов в аккаунт
      security: 
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          description: Номер страницы
          schema:
            type: integer
            minimum: 1
        - name: size
          in: query
          required: false
          description: Размер страницы
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginHistory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /user/social_accounts/{id}:
    delete:
      tags:
        - пользователь
      summary: Отвязать аккаунт соцсети
      description: Отвязать аккаунт соцсети
      security: 
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID записи в реестре аккаунтов соцсетей 
          required: true
          schema:
            type: string
            format: uuid
            example: Gcc55edda-7acd-4128-877d-02b94430896a
      responses:
        '200':
          description: Успех
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Запись не найдена 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAccountNotFound'
    
  /user/logout:
    post:
      tags:
        - пользователь
      summary: Выйти из аккаунта
      description: Сделать access-token невалидным
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Успешный выход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
