version: '3.4'
services:
  redis:
    image: redis:alpine
    restart: always
    networks:
      - my_network
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata/
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    depends_on:
      - redis
    networks:
      - my_network
  app:
    build: .
    env_file:
      - .env
    volumes:
      - ${HOST_JWT_PRIVATE_KEY_PATH}:${JWT_PRIVATE_KEY_PATH}:ro
      - ${HOST_JWT_PUBLIC_KEY_PATH}:${JWT_PUBLIC_KEY_PATH}:ro
    depends_on:
      - db
      - redis
    networks:
      - my_network
  nginx_auth:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    restart: always
    depends_on:
      - app
    ports:
      - 88:88
    networks:
      - my_network
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 6831:6831/udp
      - 16686:16686
    depends_on:
      - nginx_auth
    restart: always

volumes:
  pgdata:
    external: true
    name: ${POSTGRES_VOLUME_NAME}

networks:
  my_network:
    external: true